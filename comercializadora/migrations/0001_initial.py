# Generated by Django 5.0.6 on 2025-10-17 13:07

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0068_remove_employee_local_employee_address_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommercialEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, help_text='Ej: Vendedor, Cajero, Gerente de Tienda', max_length=100)),
                ('local', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commercial_employees', to='core.local')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commercial_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('barcode', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('variants', models.JSONField(blank=True, default=dict, help_text='Ej: {"talla": "M", "color": "Rojo"}')),
                ('cost_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('sale_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='Ej: 20x30x10 cm', max_length=100, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='commercial_products/')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.supplier')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='commercial_products/gallery/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('commercial_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='comercializadora.commercialproduct')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('completed', 'Completada'), ('cancelled', 'Cancelada')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.client')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(help_text='Punto de Venta o Almacén de despacho', on_delete=django.db.models.deletion.PROTECT, to='core.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialSaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commercial_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comercializadora.commercialproduct')),
                ('commercial_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='comercializadora.commercialsale')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EcommerceSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('web', 'Sitio Web'), ('mercadolibre', 'Mercado Libre'), ('instagram', 'Instagram')], max_length=20)),
                ('platform_order_id', models.CharField(max_length=100)),
                ('dispatch_alert_pending', models.BooleanField(default=True)),
                ('shipping_tracking_code', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_status', models.CharField(blank=True, max_length=50, null=True)),
                ('dispatch_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.warehouse')),
                ('sale', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ecommerce_details', to='core.sale')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternalDeliveryNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('in_transit', 'En Tránsito'), ('received', 'Recibido'), ('cancelled', 'Cancelado')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispatched_at', models.DateTimeField(blank=True, null=True)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('destination_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_notes', to='core.warehouse')),
                ('origin_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dispatched_notes', to='core.warehouse')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternalDeliveryNoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('commercial_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comercializadora.commercialproduct')),
                ('delivery_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='comercializadora.internaldeliverynote')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoyaltyCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=50, unique=True)),
                ('tier', models.CharField(choices=[('bronze', 'Bronce'), ('silver', 'Plata'), ('gold', 'Oro'), ('platinum', 'Platino')], default='bronze', max_length=10)),
                ('points', models.PositiveIntegerField(default=0)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('client', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_card', to='core.client')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('reservation_date', models.DateTimeField(auto_now_add=True)),
                ('expiration_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('completed', 'Completada'), ('expired', 'Expirada'), ('cancelled', 'Cancelada')], default='active', max_length=10)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
                ('commercial_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercializadora.commercialproduct')),
                ('origin_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations_made', to='core.warehouse')),
                ('requesting_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations_requested', to='core.warehouse')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('percentage', 'Porcentaje de Descuento'), ('fixed_amount', 'Monto Fijo de Descuento'), ('2x1', '2x1'), ('3x2', '3x2'), ('combo', 'Combo')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, help_text='Valor del descuento (porcentaje o monto)', max_digits=10)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('min_quantity', models.PositiveIntegerField(default=1)),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('requires_loyalty_card', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('applicable_products', models.ManyToManyField(blank=True, to='comercializadora.commercialproduct')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('min_stock_level', models.PositiveIntegerField(default=10)),
                ('max_stock_level', models.PositiveIntegerField(default=100)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commercial_inventory', to='core.warehouse')),
                ('commercial_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_records', to='comercializadora.commercialproduct')),
            ],
            options={
                'unique_together': {('commercial_product', 'warehouse', 'tenant')},
            },
        ),
    ]
